--- 
toc-title: Conteúdo
self-contained: true
---


# Simulação Computacional dos testes

Trabalhou-se com valores de $\alpha$ como escalar e como vetor em determinados momentos. Para o seu uso escalar fixou-se o valor $1$, ja para $\alpha$
vetor fixou-se os valores $(1,5,10,50)$ $\tilde{\alpha}$

```{r,echo=F,warning=F}
suppressMessages(library(tidyverse))
suppressMessages(library(kableExtra))

```


```{r}
alpha=5
```


```{r}
beta_llhd_function=function(data,alpha){
  n_size=length(data)
  
  out_sum=n_size*log(alpha)
  in_sum=(alpha-1)*log(data)%>%
          sum()
  
  joint=out_sum+in_sum
  
  return(joint)
}

```


```{r}
beta_shape1_mle=function(data){
  n_size=length(data)
  numerator=-n_size
  denominator=log(data)%>%
                sum()
  
  return(numerator/denominator)
}

```


```{r}
power_decision=function(x){
  return(ifelse(x>qchisq(0.975,1) | x<qchisq(0.025,1) ,1,0))
}

alpha_vector=seq(2,8,by=0.2)
```


E.M.V para diferentes tamanhos amostrais

```{r}
n_size_vector=c(10, 50, 100, 500, 1000, 5000, 10000)


mles=sapply(seq_along(n_size_vector),function(i){
    replicate(500,rbeta(n=n_size_vector[i],shape1 = 2,shape2 = 1))%>%
    apply(2,beta_shape1_mle)%>%
    mean()%>%
    return()
  }
)


df=cbind('N_size'=n_size_vector,'MLE'=mles,'$\\alpha$'=(mles-2)^2)%>%
   as.data.frame()

df %>%
  kbl() %>%
  kable_paper("hover", full_width = F)
```



## Teste de Verossimilhança

```{r}
llhood_ratio_test=function(data,H_0){
  alpha_hat=beta_shape1_mle(data)
  ll_alpha_hat=beta_llhd_function(data,alpha_hat)
  
  ll_alpha_0=beta_llhd_function(data,H_0)
  
  llhood_value=2*(ll_alpha_hat-ll_alpha_0)
  return(llhood_value)
}

```



```{r}

llhood_power=sapply(seq_along(n_size_vector),function(i){
  llhood_power_step=sapply(seq_along(alpha_vector),function(k){replicate(400,rbeta(n=n_size_vector[i],shape1 = alpha_vector[k],shape2 = 1))%>%
    apply(2,llhood_ratio_test,alpha)%>%
    unlist()%>%
    sapply(power_decision)%>%
    sum()/400}
)
  return(llhood_power_step)

})


```


```{r}

tbl_llhood_power=as_tibble(llhood_power)%>%
                 rename(N_10=V1,N_50=V2,N_100=V3,N_500=V4,N_1000=V5,N_5000=V6,N_10000=V7)

pivot_llhood_power_step=tbl_llhood_power%>%
  pivot_longer(cols = everything())




index=sapply(seq_along(alpha_vector),function(i){
      rep(alpha_vector[i],7)
      })%>%
      as_tibble()%>%
      pivot_longer(cols = everything())%>%
      arrange(value)

pivot_llhood_power=cbind(pivot_llhood_power_step,index$value)%>%
                    rename('index'='index$value')
  

ggplot(pivot_llhood_power, aes(x=index, y=value)) +
  geom_line(linetype=1,linewidth=1.05,color='#FC9B5C')+
  facet_wrap(~name)+
  theme_dark()


```


```{r}
df_alpha=data.frame(alpha=c(2,3,4,5,6,7,8))
df_power_llhod_print=tbl_llhood_power[c(1,6,11,16,21,26,31),]
    
df=cbind('$\\alpha$'=df_alpha,df_power_llhod_print)

df %>%
  kbl() %>%
  kable_paper("hover", full_width = F)

```


```{r, warning=F}
chi_genarate_llhood=sapply(seq_along(n_size_vector),function(i){
    gen_samples=replicate(1000,rbeta(n=n_size_vector[i],shape1 = 2,shape2 = 1))
    apply(gen_samples, 2, llhood_ratio_test,2)%>%
      return()
  }
)

tbl_chi_genarate_llhood=as_tibble(chi_genarate_llhood)%>%
  rename(N_10=V1,N_50=V2,N_100=V3,N_500=V4,N_1000=V5,N_5000=V6,N_10000=V7)

pivot_chi_genarate_llhood=tbl_chi_genarate_llhood%>%
  pivot_longer(cols = everything())




pivot_chi_genarate_llhood%>% 
  ggplot(aes(x = value)) + 
  geom_histogram(aes(y =after_stat(density)),color='black',fill='#FC9B5C')+
  stat_function(fun = dchisq, args = list(df=1),color='#FA9BEB')+ 
  ylim(c(0,1))+
  xlim(c(0,10))+
  facet_wrap(~name)+
  theme_dark()



```


```{r}

pivot_chi_genarate_llhood%>% 
  ggplot(aes(x = value)) + 
  stat_ecdf(geom = "step",color='#FC9B5C')+
  stat_function(fun = pchisq, args = list(df=1),color='#FA9BEB')+ 
  facet_wrap(~name)+
  theme_dark()


```




```{r,eval=FALSE}
decision=function(value,sig){
  ifelse(value>=sig,1,0)%>%
  return()
}

convergence=sapply(seq_along(n_size_vector),function(i){
    p_value_total=sapply(1:50,function(k){
      p_step=replicate(1000,rbeta(n=n_size_vector[i],shape1 = 2,shape2 = 1))%>%
      apply( 2, llhood_ratio_test,2)%>%
      ks.test('pchisq',1)
      
      decision(p_step$p.value,0.05)%>%
      return()
    })
    return(sum(p_value_total)/50)
  }
)

ks.test(chi_genarate_llhood[,1],'pchisq',1)%>%
  unlist()$p.value%>%
  decision(0.05)
```

```{r,include=FALSE}
convergence_=c(0.90, 0.96, 0.98, 0.96, 0.94, 0.92, 0.96)
```


```{r}

  k=sapply(seq_along(n_size_vector),function(i){
     ks.test(chi_genarate_llhood[,i],'pchisq',1)$p.value
  })


  
df=data.frame(N_size=n_size_vector,p.value=k,convergence=convergence_)

df %>%
  kbl() %>%
  kable_paper("hover", full_width = F)

```

## Teste de Wald

```{r}
wald_hyphotesis_test=function(data,H_0){
  alpha_hat=beta_shape1_mle(data)
  fisher_information=1/(alpha_hat^2)
  
  w_value=(((alpha_hat-H_0)*sqrt(length(data)))/sqrt(1/fisher_information))^2
  
  return(w_value)
}


```



```{r}
chi_genarate_wald=sapply(seq_along(n_size_vector),function(i){
    gen_samples=replicate(1000,rbeta(n=n_size_vector[i],shape1 = 2,shape2 = 1))
    apply(gen_samples, 2, wald_hyphotesis_test,2)%>%
      return()
  }
)



pivot_chi_genarate_wald=as_tibble(chi_genarate_wald)%>%
  rename(N_10=V1,N_50=V2,N_100=V3,N_500=V4,N_1000=V5,N_5000=V6,N_10000=V7)%>%
  pivot_longer(cols = everything())




pivot_chi_genarate_wald%>% 
  ggplot(aes(x = value)) + 
  geom_histogram(aes(y =after_stat(density)),color='black',fill='#FC9B5C')+
  stat_function(fun = dchisq, args = list(df=1),color='#FA9BEB')+ 
  ylim(c(0,1))+
  xlim(c(0,10))+
  facet_wrap(~name)+
  theme_dark()




```


## Teste Score

```{r}
score_test=function(data,H_0){
  n_size=length(data)
  
  numerator_1=(n_size/H_0)
  numerator_2=log(data)%>%
                sum()
  
  U_information=numerator_1+numerator_2
  
  
  fisher_information=length(data)/(H_0^2)
  
  score_value=(U_information^2)/fisher_information
  
  
  return(score_value)
  
  
}


```



```{r}
chi_genarate_score=sapply(seq_along(n_size_vector),function(i){
    gen_samples=replicate(1000,rbeta(n=n_size_vector[i],shape1 = 2,shape2 = 1))
    apply(gen_samples, 2, score_test,2)%>%
      return()
  }
)



pivot_chi_genarate_score=as_tibble(chi_genarate_score)%>%
  rename(N_10=V1,N_50=V2,N_100=V3,N_500=V4,N_1000=V5,N_5000=V6,N_10000=V7)%>%
  pivot_longer(cols = everything())




pivot_chi_genarate_score%>% 
  ggplot(aes(x = value)) + 
  geom_histogram(aes(y =after_stat(density)),color='black',fill='#FC9B5C')+
  stat_function(fun = dchisq, args = list(df=1),color='#FA9BEB')+ 
  ylim(c(0,1))+
  xlim(c(0,10))+
  facet_wrap(~name)+
  theme_dark()



```

